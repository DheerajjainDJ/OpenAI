import React, { useState, useEffect, useCallback } from "react";
import Card from "../comps/Card";
import Loader from "../comps/Loader";
import axios from "axios";
import { BsSearch as SearchIcon } from "react-icons/bs";
import { AiFillCloseCircle as CloseIcon } from "react-icons/ai";

const RenderCards = ({ data, title }) => {
  if (data !== null && data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h1 className="text-lg text-purple-700 uppercase mt-6 font-bold dark:text-purple-900">
      {title}
    </h1>
  );
};

const Community = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [searchResults, setSearchResults] = useState([]);
  const [searchSetTimeout, setSearchSetTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await axios.get(
          "https://open-ai-server.up.railway.app/api/v1/post"
        );
        setAllPosts(response.data.data.reverse());
      } catch (error) {
        alert(error.message);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleChange = (e) => {
    clearTimeout(searchSetTimeout);
    setSearchText(e.target.value);

    setSearchSetTimeout(
      setTimeout(() => {
        const searchItems = allPosts.filter(
          (post) =>
            post.name.toLowerCase().includes(searchText.toLowerCase()) ||
            post.prompt.toLowerCase().includes(searchText.toLowerCase())
        );
        setSearchResults(searchItems);
      }, 500)
    );
  };

  return (
    <section className="min-h-screen bg-slate-200 dark:bg-gray-800 dark:text-white">
      <div className="max-w-6xl mx-auto p-8">
        <h1 className="font-bold text-center text-black text-3xl dark:text-white">
          The community showcase
        </h1>
        <p className="mt-3 text-gray-500 text-center text-xl max-w-md mx-auto dark:text-white">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E.
        </p>
        <div className="mt-7 max-w-3xl mx-auto relative flex items-center text-gray-400 focus-within:text-gray-600 ">
          <SearchIcon className="h-5 w-5 absolute left-2 pointer-events-none" />
          <input
            placeholder="Search Post"
            value={searchText}
            onChange={handleChange}
            className="pr-4 pl-9 py-3 w-full rounded-md ring-2 ring-gray-700 focus:ring-blue-700 focus:shadow-xl text-black text-lg font-medium placeholder-gray-500 outline-none"
          />
          {searchText && (
            <CloseIcon
              onClick={() => setSearchText("")}
              className="h-7 w-7 absolute right-2"
            />
          )}
        </div>
        <div className="mt-10">
          {loading ? (
            <div className="flex items-center justify-center">
              <Loader />
            </div>
          ) : (
            <>
              {searchText && (
                <p className="text-lg text-gray-500 my-4">
                  Showing results for <strong>{searchText}</strong>
                </p>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                {searchText ? (
                  <RenderCards
                    data={searchResults}
                    title="No search results found"
                  />
                ) : (
                  <RenderCards data={allPosts} title="No posts found" />
                )}
              </div>
            </>
          )}
        </div>
      </div>
    </section>
  );
};

export default Community;
